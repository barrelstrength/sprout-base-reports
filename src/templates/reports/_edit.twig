{% extends "sprout-base-reports/_layouts/base" %}
{% import "_includes/forms" as forms %}
{% import "sprout-base-fields/_includes/forms" as sproutFields %}

{% do view.registerAssetBundle("barrelstrength\\sproutbase\\web\\assets\\cp\\CpAsset") %}
{% do view.registerAssetBundle("barrelstrength\\sproutbasereports\\web\\assets\\reports\\SproutReportsAsset") %}
{% do view.registerAssetBundle('craft\\web\\assets\\timepicker\\TimepickerAsset') %}

{% set title = report['id'] is defined and report['id'] is not empty
    ? "Edit Report"|t('sprout-base-reports')
    : "New Report"|t('sprout-base-reports') %}

{% set crumbs = [
    { label: 'Reports'|t('sprout-base-reports'), url: reportIndexUrl }
] %}

{% set fullPageForm = true %}

{% if groups | length %}
    {% set groupId = report is defined ? report.groupId : null %}

    {% if not groupId %}
        {% set groupId = groups|keys[0] %}
    {% endif %}

    {% if groups[groupId] is not defined %}
        {% exit 404 %}
    {% endif %}
{% endif %}

{% set saveShortcutRedirect = continueEditingUrl %}

{% block actionButton %}

    <input type="hidden" name="action" value="sprout-base-reports/reports/save-report">
    <input type="hidden" name="viewContext" value="{{ viewContext }}">
    {{ redirectInput(reportIndexUrl) }}

    <div class="button">
        <div class="btngroup">
            <input type="submit" class="btn submit"
                value="{{ "Save Report"|t('sprout-base-reports') }}">

            <div class="btn submit menubtn"></div>
            <div class="menu">
                <ul>
                    <li><a class="formsubmit"
                            data-redirect="{{ continueEditingUrl|hash }}">{{ "Save and continue editing"|t('sprout-base-reports') }}
                            <span class="shortcut">âŒ˜S</span></a>
                    </li>
                    <li><a class="formsubmit"
                            data-redirect="{{ dataSource.getUrl(dataSource.id ~ '/new')|hash }}">
                            {{ "Save and add another report"|t('sprout-base-reports') }}</a>
                    </li>
                </ul>

                {% if report.id is not null %}
                    <hr>
                    <ul>
                        <li>
                            <a class="formsubmit error" data-action="sprout-base-reports/reports/delete-report" data-confirm="{{ 'Are you sure you want to delete this report?'|t('sprout-base-reports') }}" data-redirect="{{ reportIndexUrl|hash }}">{{ "Delete"|t('sprout-base-reports') }}</a>
                        </li>
                    </ul>
                {% endif %}
            </div>
        </div>
    </div>

{% endblock %}

{% block content %}

    <input type="hidden" name="dataSourceId" value="{{ dataSource.id }}">
    <input type="hidden" name="pluginHandle" value="{{ pluginHandle }}">

    {% if report is defined %}
        <input type="hidden" name="id" value="{{ report.id }}">
    {% endif %}

    {{ forms.textField({
        label: "Name"|t('sprout-base-reports'),
        instructions: "What this report will be called in the CP."|t('sprout-base-reports'),
        id: "name",
        name: 'name',
        value: report is defined ? report.name : "",
        errors: report is defined ? report.getErrors('name') : "",
        required: true,
        first: true,
        autofocus: true
    }) }}

    {{ forms.textField({
        label: "Description"|t('sprout-base-reports'),
        instructions: "A description of your report that will appear in the info bubble next to your Report Name on the Reports Index page."|t('sprout-base-reports'),
        name: 'description',
        rows: 3,
        value: report is defined ? report.description : "",
        errors: report is defined ? report.getErrors('description') : ""
    }) }}

    {% if dataSource is defined %}

        {% set settingsHtml = dataSource.getSettingsHtml() %}

        {% if settingsHtml %}
            <hr>
            {{ settingsHtml | raw }}
        {% endif %}

    {% endif %}

{% endblock %}

{% block details %}

    <div id="settings" class="meta">

        {% if groups | length %}

            {% set groupOptions = [] %}
            {% set groupOptions = groupOptions|merge([{ label: 'None'|t('sprout-base-reports'), value: '' }]) %}
            {% for group in groups %}
                {% set groupOptions = groupOptions|merge([{ label: group.name, value: group.id }]) %}
            {% endfor %}

            {{ forms.selectField({
                first: true,
                label: "Group <span class='info'>The group where this report should be displayed</span>"|t('sprout-base-reports'),
                id: 'groupId',
                name: 'groupId',
                options: groupOptions,
                value: groupId
            }) }}

        {% endif %}

        {{ forms.textField({
            label: "Handle"|t('sprout-base-reports'),
            id: 'handle',
            name: 'handle',
            required: true,
            value: report is defined ? report.handle : "",
            errors: report is defined ? report.getErrors('handle') : ""
        }) }}

        {{ forms.textField({
            label: "Title Format <span class='info'>Auto-generate your Report name using settings values, such as {startDate|date('F d, Y')}</span>"|t('sprout-base-reports'),
            name: 'nameFormat',
            id: 'name-format-field',
            placeholder: '{dateCreated|date("D, d M Y H:i:s")}',
            value: report is defined ? report.nameFormat : "",
            errors: report is defined ? report.getErrors('nameFormat') : ""
        }) }}

        {{ forms.selectField({
            label: "Sort Order <span class='info'>The order that the column defined in the Sort Column setting will be displayed. Sort Column setting must also be defined.</span>"|t('sprout-base-reports'),
            name: 'sortOrder',
            options: [
                { label: 'None', value: '' },
                { label: 'Ascending (A-Z)', value: 'asc' },
                { label: 'Descending (Z-A)', value: 'desc' }
            ],
            value: report.sortOrder
        }) }}

        {{ forms.textField({
            label: "Sort Column <span class='info'>The case-sensitive, column name in the Report results that you want to sort by default. Leave blank for none. Sort Order setting must also be defined.</span>"|t('sprout-base-reports'),
            name: 'sortColumn',
            value: report.sortColumn,
            errors: report is defined ? report.getErrors('sortColumn') : ""
        }) }}

        {{ forms.field({
            label: 'Delimiter <span class="info">Select the delimiter to use when exporting the report.</span>'|t('sprout-base-reports'),
            placeholder: ',',
        }, sproutFields.selectOther({
            name: 'delimiter',
            options: delimiterOptions,
            value: report.delimiter ?? settings.defaultExportDelimiter,
            otherPlaceholderText: ','|t('sprout-base-reports')
        })) }}

        {% if dataSource.isAllowHtmlEditable() %}
            {{ forms.lightSwitchField({
                label: "Allow HTML <span class='info'>Render HTML in your report results. Don't enable this setting if you allow user submitted content.</span>"|t('sprout-base-reports'),
                name: 'allowHtml',
                on: report.allowHtml is defined ? report.allowHtml : dataSource.getDefaultAllowHtml()
            }) }}
        {% endif %}

        {{ forms.lightSwitchField({
            label: "Enabled"|t('sprout-base-reports'),
            name: 'enabled',
            on: report.enabled
        }) }}
    </div>

    {% set sproutReportsIsEnabled = craft.app.getPlugins().isPluginEnabled('sprout-reports') %}

    {% if sproutReportsIsEnabled %}
        <div id="sprout-reports-mailing-list-sidebar" class="meta">

            <div class="field sprout-meta-heading">
                <div class="heading"><h6>{{ "Mailing List"|t('sprout-base-reports') }}</h6></div>
            </div>

            {% set emailColumnLabel = "Email Column <span class='info'>Selecting an Email Column will convert this report into a Mailing List. Column name is case sensitive and should match the exactly match the column name in the header of the report. Messages will only be sent to valid email addresses. </span>"|t('sprout-base-reports') %}

            {% if report.getDataSource().isEmailColumnEditable() %}
                {{ forms.field({
                    label: emailColumnLabel,
                    placeholder: 'Email'|t('sprout-base-reports'),
                }, sproutFields.selectOther({
                    name: 'emailColumn',
                    options: emailColumnOptions,
                    value: report.emailColumn,
                    otherPlaceholderText: 'email'|t('sprout-base-reports')
                })) }}
            {% else %}
                {# Email column not editable and set by Data Source #}
                {{ forms.textField({
                    label: emailColumnLabel,
                    name: 'emailColumn',
                    class: 'code',
                    value: report is defined ? report.getDataSource().getDefaultEmailColumn() : "",
                    errors: report is defined ? report.getErrors('emailColumn') : "",
                    warning: 'Email Column is set by Data Source'|t('sprout-base-reports'),
                    readonly: true
                }) }}
            {% endif %}

        </div>
    {% endif %}

    <div class="meta read-only">
        <div class="data">
            <h5 class="heading">{{ "Data Source"|t('sprout-base-reports') }}</h5>
            <div class="value">{{ dataSource.displayName() }}</div>
        </div>
    </div>

{% endblock %}

{% if report is not defined or not report.handle %}
    {% js "new Craft.HandleGenerator('#name', '#handle');" %}
{% endif %}

{% css %}
    #sprout-reports-mailing-list-sidebar .warning {
    padding-bottom:24px;
    }
{% endcss %}

{% js on ready %}
    // add support for select other field in sidebar
    if (Craft.SproutFields != null) {
    Craft.SproutFields.initFields($("#details"));
    }
{% endjs %}
